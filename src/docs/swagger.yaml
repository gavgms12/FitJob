openapi: 3.0.0
info:
  title: FitJob API
  description: API para o sistema FitJob de gerenciamento de currículos e vagas
  version: 1.0.0

servers:
  - url: http://localhost:3500/api
    description: Servidor de desenvolvimento

components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID único do usuário
        nome:
          type: string
          description: Nome completo do usuário
        email:
          type: string
          format: email
          description: Email do usuário (único)
        senha:
          type: string
          format: password
          description: Senha do usuário (hash)
        criadoEm:
          type: string
          format: date-time
          description: Data de criação do usuário
        caracteristicaVaga:
          type: object
          properties:
            modeloTrabalho:
              type: string
              description: Modelo de trabalho preferido (remoto, presencial, híbrido)
            localizacao:
              type: string
              description: Localização desejada
            salarioDesejadoMin:
              type: number
              description: Salário mínimo desejado
            salarioDesejadoMax:
              type: number
              description: Salário máximo desejado
      required:
        - nome
        - email
        - senha

    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /usuarios:
    post:
      summary: Criar novo usuário
      description: Cria um novo usuário no sistema
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                  format: email
                senha:
                  type: string
                  format: password
                caracteristicaVaga:
                  $ref: '#/components/schemas/Usuario/properties/caracteristicaVaga'
              required:
                - nome
                - email
                - senha
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email já existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Listar usuários
      description: Lista todos os usuários cadastrados
      tags:
        - Usuários
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID do usuário

    get:
      summary: Buscar usuário por ID
      description: Retorna os dados de um usuário específico
      tags:
        - Usuários
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Atualizar usuário
      description: Atualiza os dados de um usuário específico
      tags:
        - Usuários
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                  format: email
                senha:
                  type: string
                  format: password
                caracteristicaVaga:
                  $ref: '#/components/schemas/Usuario/properties/caracteristicaVaga'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Deletar usuário
      description: Remove um usuário do sistema
      tags:
        - Usuários
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Usuário deletado com sucesso
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 